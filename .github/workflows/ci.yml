name: Node.js Package CI/CD

on:
  push:
    branches: [main]
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0
  pull_request:
    branches: [main]

# Permissions for GitHub Release creation
permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: ['1.0.0', 'latest'] # Test on Bun versions

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Lint code
        run: bun run lint

      - name: Type check with TypeScript
        run: bun run typecheck

      - name: Run tests
        run: bun test

  build-and-publish:
    needs: test # Run only if tests pass
    runs-on: ubuntu-latest
    # Only publish on tag push events
    if: startsWith(github.ref, 'refs/tags/v') 
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build:prod

      - name: Setup Node for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm install

      - name: Create package
        run: npm pack

      - name: Verify package contents
        run: npm pack --dry-run

      - name: List created files
        run: ls -la *.tgz

      - name: Check package availability
        run: npm view resk-caching || echo "Package name available for first-time publication"

      - name: Verify package contents
        run: tar -tzf *.tgz | head -20

      - name: Validate package.json
        run: npx tsc --noEmit

      - name: Publish package to npmjs
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Use npm token secret

      - name: Get package info
        id: package
        shell: bash
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            resk-caching-${{ steps.package.outputs.version }}.tgz
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
